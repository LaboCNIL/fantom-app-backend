{
   "id": "6b2eb06b-4616-4ef8-8440-31061e42a214",
   "realm": "fantome-app",
   "notBefore": 0,
   "defaultSignatureAlgorithm": "RS256",
   "revokeRefreshToken": false,
   "refreshTokenMaxReuse": 0,
   "accessTokenLifespan": 300,
   "accessTokenLifespanForImplicitFlow": 900,
   "ssoSessionIdleTimeout": 1800,
   "ssoSessionMaxLifespan": 36000,
   "ssoSessionIdleTimeoutRememberMe": 0,
   "ssoSessionMaxLifespanRememberMe": 0,
   "offlineSessionIdleTimeout": 2592000,
   "offlineSessionMaxLifespanEnabled": false,
   "offlineSessionMaxLifespan": 5184000,
   "clientSessionIdleTimeout": 0,
   "clientSessionMaxLifespan": 0,
   "clientOfflineSessionIdleTimeout": 0,
   "clientOfflineSessionMaxLifespan": 0,
   "accessCodeLifespan": 60,
   "accessCodeLifespanUserAction": 300,
   "accessCodeLifespanLogin": 1800,
   "actionTokenGeneratedByAdminLifespan": 43200,
   "actionTokenGeneratedByUserLifespan": 300,
   "oauth2DeviceCodeLifespan": 600,
   "oauth2DevicePollingInterval": 5,
   "enabled": true,
   "sslRequired": "external",
   "registrationAllowed": false,
   "registrationEmailAsUsername": false,
   "rememberMe": false,
   "verifyEmail": false,
   "loginWithEmailAllowed": true,
   "duplicateEmailsAllowed": false,
   "resetPasswordAllowed": false,
   "editUsernameAllowed": false,
   "bruteForceProtected": false,
   "permanentLockout": false,
   "maxTemporaryLockouts": 0,
   "maxFailureWaitSeconds": 900,
   "minimumQuickLoginWaitSeconds": 60,
   "waitIncrementSeconds": 60,
   "quickLoginCheckMilliSeconds": 1000,
   "maxDeltaTimeSeconds": 43200,
   "failureFactor": 30,
   "roles": {
      "realm": [
         {
            "id": "0e63099d-c6f5-4bf3-9889-89b92f6d1463",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "6b2eb06b-4616-4ef8-8440-31061e42a214",
            "attributes": {}
         },
         {
            "id": "066263a4-174e-4c93-ad54-e58bba32aa3f",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "6b2eb06b-4616-4ef8-8440-31061e42a214",
            "attributes": {}
         },
         {
            "id": "f62af9a1-54be-4586-96cb-0992571c3f4e",
            "name": "default-roles-fantome-app",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
               "realm": [
                  "offline_access",
                  "uma_authorization"
               ],
               "client": {
                  "account": [
                     "view-profile",
                     "manage-account"
                  ]
               }
            },
            "clientRole": false,
            "containerId": "6b2eb06b-4616-4ef8-8440-31061e42a214",
            "attributes": {}
         }
      ],
      "client": {
         "realm-management": [
            {
               "id": "6c445ccd-d82f-4316-80a9-63e1da073ea2",
               "name": "manage-realm",
               "description": "${role_manage-realm}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "b8ea8674-6e56-4c0f-98b7-2f545f12d724",
               "name": "view-events",
               "description": "${role_view-events}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "216fdf73-6c8e-4f4f-9a23-9167743c9af1",
               "name": "query-clients",
               "description": "${role_query-clients}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "b4850bd3-550e-47f7-a2dd-b6fa381374f0",
               "name": "view-clients",
               "description": "${role_view-clients}",
               "composite": true,
               "composites": {
                  "client": {
                     "realm-management": [
                        "query-clients"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "2e2e2cfd-72ca-49e3-b4ad-134f55db9511",
               "name": "manage-identity-providers",
               "description": "${role_manage-identity-providers}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "d9079c87-141f-4f0c-aa3c-28e4d0789b8a",
               "name": "view-users",
               "description": "${role_view-users}",
               "composite": true,
               "composites": {
                  "client": {
                     "realm-management": [
                        "query-groups",
                        "query-users"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "4d5dbbdb-e660-41d8-91d5-07a055b12bcd",
               "name": "manage-clients",
               "description": "${role_manage-clients}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "c7b557a6-e1b2-47ee-a5cb-e02e58d9674d",
               "name": "view-identity-providers",
               "description": "${role_view-identity-providers}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "7d277036-9883-4182-a09f-498879ed6ef5",
               "name": "view-realm",
               "description": "${role_view-realm}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "53908585-3026-41f4-bee3-c718908b56ad",
               "name": "manage-authorization",
               "description": "${role_manage-authorization}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "e5179f55-d00c-4ab4-929b-36baea044f82",
               "name": "create-client",
               "description": "${role_create-client}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "e4819574-2e9e-4346-ad6a-4c6e4178b35a",
               "name": "view-authorization",
               "description": "${role_view-authorization}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "dc2f73e6-a0a6-4a0f-b051-4ef85e969ea6",
               "name": "impersonation",
               "description": "${role_impersonation}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "9720f046-1e4c-4922-bab3-046c7bf9e518",
               "name": "query-groups",
               "description": "${role_query-groups}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "5ade5cf9-8c3c-42e7-81c4-01d79f2ee6ae",
               "name": "manage-users",
               "description": "${role_manage-users}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "26210379-f6d0-4c51-955b-714d4c22ad02",
               "name": "query-realms",
               "description": "${role_query-realms}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "7e516e6b-2ae6-4a1c-b1b9-9f8ddcd3e41c",
               "name": "manage-events",
               "description": "${role_manage-events}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "6fdae454-d7d4-42d5-8584-0394e6dc6aeb",
               "name": "query-users",
               "description": "${role_query-users}",
               "composite": false,
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            },
            {
               "id": "1d4bb167-24fd-4b5d-9436-8bd1de2bd8b7",
               "name": "realm-admin",
               "description": "${role_realm-admin}",
               "composite": true,
               "composites": {
                  "client": {
                     "realm-management": [
                        "manage-realm",
                        "view-events",
                        "query-clients",
                        "view-clients",
                        "manage-identity-providers",
                        "view-users",
                        "manage-clients",
                        "view-realm",
                        "view-identity-providers",
                        "manage-authorization",
                        "view-authorization",
                        "create-client",
                        "impersonation",
                        "query-groups",
                        "query-realms",
                        "manage-users",
                        "manage-events",
                        "query-users"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
               "attributes": {}
            }
         ],
         "security-admin-console": [],
         "admin-cli": [],
         "fantome-app": [],
         "account-console": [],
         "broker": [
            {
               "id": "c893c767-bf4e-4450-b99b-5893e4ac9e47",
               "name": "read-token",
               "description": "${role_read-token}",
               "composite": false,
               "clientRole": true,
               "containerId": "70f9076e-cc2b-4ca4-9db5-edd69d37d360",
               "attributes": {}
            }
         ],
         "account": [
            {
               "id": "ca8d1cc6-7f0e-4510-9abb-2f61d4c8651c",
               "name": "view-applications",
               "description": "${role_view-applications}",
               "composite": false,
               "clientRole": true,
               "containerId": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
               "attributes": {}
            },
            {
               "id": "889f6b68-28da-42e3-9c1d-282032b4f2f5",
               "name": "view-groups",
               "description": "${role_view-groups}",
               "composite": false,
               "clientRole": true,
               "containerId": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
               "attributes": {}
            },
            {
               "id": "0a62ff2e-999b-4467-ad16-1e2179e4145c",
               "name": "manage-consent",
               "description": "${role_manage-consent}",
               "composite": true,
               "composites": {
                  "client": {
                     "account": [
                        "view-consent"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
               "attributes": {}
            },
            {
               "id": "91a013bd-dea2-4277-8b43-7215e56ccd7b",
               "name": "manage-account-links",
               "description": "${role_manage-account-links}",
               "composite": false,
               "clientRole": true,
               "containerId": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
               "attributes": {}
            },
            {
               "id": "307ca04f-5217-4895-9234-2147b917b2b5",
               "name": "view-profile",
               "description": "${role_view-profile}",
               "composite": false,
               "clientRole": true,
               "containerId": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
               "attributes": {}
            },
            {
               "id": "1c54c988-3758-4399-ac49-63aec4284e14",
               "name": "delete-account",
               "description": "${role_delete-account}",
               "composite": false,
               "clientRole": true,
               "containerId": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
               "attributes": {}
            },
            {
               "id": "a62266ba-a9b8-48f6-8fa2-7d23743980a3",
               "name": "manage-account",
               "description": "${role_manage-account}",
               "composite": true,
               "composites": {
                  "client": {
                     "account": [
                        "manage-account-links"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
               "attributes": {}
            },
            {
               "id": "ecc1ac4d-45af-4b29-84c9-e9cb5ce8569d",
               "name": "view-consent",
               "description": "${role_view-consent}",
               "composite": false,
               "clientRole": true,
               "containerId": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
               "attributes": {}
            }
         ]
      }
   },
   "groups": [],
   "defaultRole": {
      "id": "f62af9a1-54be-4586-96cb-0992571c3f4e",
      "name": "default-roles-fantome-app",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "6b2eb06b-4616-4ef8-8440-31061e42a214"
   },
   "requiredCredentials": [
      "password"
   ],
   "otpPolicyType": "totp",
   "otpPolicyAlgorithm": "HmacSHA1",
   "otpPolicyInitialCounter": 0,
   "otpPolicyDigits": 6,
   "otpPolicyLookAheadWindow": 1,
   "otpPolicyPeriod": 30,
   "otpPolicyCodeReusable": false,
   "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
   ],
   "localizationTexts": {},
   "webAuthnPolicyRpEntityName": "keycloak",
   "webAuthnPolicySignatureAlgorithms": [
      "ES256"
   ],
   "webAuthnPolicyRpId": "",
   "webAuthnPolicyAttestationConveyancePreference": "not specified",
   "webAuthnPolicyAuthenticatorAttachment": "not specified",
   "webAuthnPolicyRequireResidentKey": "not specified",
   "webAuthnPolicyUserVerificationRequirement": "not specified",
   "webAuthnPolicyCreateTimeout": 0,
   "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
   "webAuthnPolicyAcceptableAaguids": [],
   "webAuthnPolicyExtraOrigins": [],
   "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
   "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
   ],
   "webAuthnPolicyPasswordlessRpId": "",
   "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
   "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
   "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
   "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
   "webAuthnPolicyPasswordlessCreateTimeout": 0,
   "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
   "webAuthnPolicyPasswordlessAcceptableAaguids": [],
   "webAuthnPolicyPasswordlessExtraOrigins": [],
   "scopeMappings": [
      {
         "clientScope": "offline_access",
         "roles": [
            "offline_access"
         ]
      }
   ],
   "clientScopeMappings": {
      "account": [
         {
            "client": "account-console",
            "roles": [
               "manage-account",
               "view-groups"
            ]
         }
      ]
   },
   "clients": [
      {
         "id": "86d53b7a-26ad-4c0d-b6f3-52cf85f7ebe0",
         "clientId": "account",
         "name": "${client_account}",
         "rootUrl": "${authBaseUrl}",
         "baseUrl": "/realms/fantome-app/account/",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "redirectUris": [
            "/realms/fantome-app/account/*"
         ],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {
            "post.logout.redirect.uris": "+"
         },
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "9a5c084e-9504-4192-ac3b-204fe59fca79",
         "clientId": "account-console",
         "name": "${client_account-console}",
         "rootUrl": "${authBaseUrl}",
         "baseUrl": "/realms/fantome-app/account/",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "redirectUris": [
            "/realms/fantome-app/account/*"
         ],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
         },
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "protocolMappers": [
            {
               "id": "66011c29-d291-46ae-9c61-23d1ad3315b6",
               "name": "audience resolve",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-audience-resolve-mapper",
               "consentRequired": false,
               "config": {}
            }
         ],
         "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "0132e1e0-8cbf-4ab8-9a74-121525a030fc",
         "clientId": "admin-cli",
         "name": "${client_admin-cli}",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "redirectUris": [],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": false,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": true,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {},
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "70f9076e-cc2b-4ca4-9db5-edd69d37d360",
         "clientId": "broker",
         "name": "${client_broker}",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "redirectUris": [],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": true,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": false,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {},
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "c3249180-b973-4364-9967-d6c35807367e",
         "clientId": "fantome-app",
         "name": "fantome-app",
         "description": "",
         "rootUrl": "",
         "adminUrl": "",
         "baseUrl": "",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "secret": "**********",
         "redirectUris": [
            "http://localhost:4200",
            "http://localhost:9000"
         ],
         "webOrigins": [
            "*"
         ],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": true,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": true,
         "protocol": "openid-connect",
         "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1725438426",
            "backchannel.logout.session.required": "true",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
         },
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": true,
         "nodeReRegistrationTimeout": -1,
         "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "ed0600e3-666e-42d3-a399-afb19b64d5d9",
         "clientId": "realm-management",
         "name": "${client_realm-management}",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "redirectUris": [],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": true,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": false,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {},
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "623c8aa0-d133-434d-a673-9396742fea40",
         "clientId": "security-admin-console",
         "name": "${client_security-admin-console}",
         "rootUrl": "${authAdminUrl}",
         "baseUrl": "/admin/fantome-app/console/",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "redirectUris": [
            "/admin/fantome-app/console/*"
         ],
         "webOrigins": [
            "+"
         ],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
         },
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "protocolMappers": [
            {
               "id": "389561bc-967b-4e14-b729-f22da424737f",
               "name": "locale",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
               }
            }
         ],
         "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      }
   ],
   "clientScopes": [
      {
         "id": "4b684cb2-f515-49f3-a2d4-3ce3478c02dd",
         "name": "role_list",
         "description": "SAML role list",
         "protocol": "saml",
         "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
         },
         "protocolMappers": [
            {
               "id": "ed84cf96-a2ee-4019-a1e5-27c1bf97dea5",
               "name": "role list",
               "protocol": "saml",
               "protocolMapper": "saml-role-list-mapper",
               "consentRequired": false,
               "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
               }
            }
         ]
      },
      {
         "id": "d33a404b-d47e-4611-9e92-2903a90b23bd",
         "name": "microprofile-jwt",
         "description": "Microprofile - JWT built-in scope",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
         },
         "protocolMappers": [
            {
               "id": "e33a3a8e-f62b-4d43-94df-01add857ebd0",
               "name": "upn",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "06e5f3a3-04e9-47d8-8cf3-1e40640407bc",
               "name": "groups",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-realm-role-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
               }
            }
         ]
      },
      {
         "id": "7c50df36-9856-4efe-99a8-b0970ccb6db3",
         "name": "offline_access",
         "description": "OpenID Connect built-in scope: offline_access",
         "protocol": "openid-connect",
         "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
         }
      },
      {
         "id": "ed496e5e-fe38-42ff-a84f-0594d45b4f03",
         "name": "profile",
         "description": "OpenID Connect built-in scope: profile",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "b0704901-12e8-4773-a658-30a16220328e",
               "name": "locale",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "93d07d93-bbd5-4622-a3a9-ce13d1f65b40",
               "name": "picture",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "daa69c5a-0038-47fb-9a7d-f2fe38ca1ac5",
               "name": "birthdate",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "3fc90def-448a-4316-a030-eead6e771298",
               "name": "nickname",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "0d18477d-327a-4d38-90b1-4bcf91ed6643",
               "name": "zoneinfo",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "ba028f77-030c-4407-9ecb-8a558edcabf7",
               "name": "updated at",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "long"
               }
            },
            {
               "id": "8ca324a5-4cf3-4cb2-be04-a5bb223d6196",
               "name": "middle name",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "cb89bcce-213e-4a9f-a68d-fb0bceceb41c",
               "name": "website",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "81f0ff42-df9b-4afb-815b-43a46795e651",
               "name": "username",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "6f013d56-37f2-49f3-8c39-4a457a63243d",
               "name": "profile",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "70c5d3c2-d1e8-4d94-bd67-6acae1507806",
               "name": "family name",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "6df6b281-6051-4c7b-bae4-e2d9f09b08a1",
               "name": "full name",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-full-name-mapper",
               "consentRequired": false,
               "config": {
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
               }
            },
            {
               "id": "d731ac76-6bb9-4f48-a71e-b04b4e41706c",
               "name": "given name",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "4c625434-c168-47bd-bfe0-0b573a6c280c",
               "name": "gender",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
               }
            }
         ]
      },
      {
         "id": "d7e3d309-b217-4b41-ae41-4a8b918caf50",
         "name": "phone",
         "description": "OpenID Connect built-in scope: phone",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "b27fe403-445c-49ad-bcd1-b1b1aa078773",
               "name": "phone number",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "f73da290-d484-4a43-b63d-821796b6416b",
               "name": "phone number verified",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
               }
            }
         ]
      },
      {
         "id": "db2fca80-b03a-4b69-b77d-6d6a4dcda9ae",
         "name": "web-origins",
         "description": "OpenID Connect scope for add allowed web origins to the access token",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
         },
         "protocolMappers": [
            {
               "id": "a20d5942-f841-42c0-a813-af0ad58c66a9",
               "name": "allowed web origins",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-allowed-origins-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "access.token.claim": "true"
               }
            }
         ]
      },
      {
         "id": "db6519d5-c395-475d-b7dc-7bbae2b31d0f",
         "name": "email",
         "description": "OpenID Connect built-in scope: email",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "1c0ce0dd-0f9a-4d53-8d65-8cbd921875c1",
               "name": "email",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "f306d53e-43dc-4f15-b155-b3d00a46d28e",
               "name": "email verified",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-property-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
               }
            }
         ]
      },
      {
         "id": "59436ec8-6f16-4212-ab4a-0f655b53f5eb",
         "name": "acr",
         "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
         },
         "protocolMappers": [
            {
               "id": "ce2ed104-58b6-4787-a047-69d21e5fcf27",
               "name": "acr loa level",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-acr-mapper",
               "consentRequired": false,
               "config": {
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true"
               }
            }
         ]
      },
      {
         "id": "653dd81f-ba11-4fbd-a2be-b843a84a5950",
         "name": "address",
         "description": "OpenID Connect built-in scope: address",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "a113e34e-aaa3-4dc5-911e-1984be95822e",
               "name": "address",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-address-mapper",
               "consentRequired": false,
               "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "introspection.token.claim": "true",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
               }
            }
         ]
      },
      {
         "id": "a88e11ff-a91c-4098-aea7-d1b7c7c3fd5f",
         "name": "roles",
         "description": "OpenID Connect scope for add user roles to the access token",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "d5805d2f-88c0-4d81-84ec-db143b4a8fb9",
               "name": "client roles",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-client-role-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "d57bfa28-c3bf-4088-8eee-f104998b65aa",
               "name": "audience resolve",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-audience-resolve-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "access.token.claim": "true"
               }
            },
            {
               "id": "020c0cfd-2a75-4b8f-87b0-c18b72c653f4",
               "name": "realm roles",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-realm-role-mapper",
               "consentRequired": false,
               "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String"
               }
            }
         ]
      }
   ],
   "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr"
   ],
   "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
   ],
   "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
   },
   "smtpServer": {},
   "eventsEnabled": false,
   "eventsListeners": [
      "jboss-logging"
   ],
   "enabledEventTypes": [],
   "adminEventsEnabled": false,
   "adminEventsDetailsEnabled": false,
   "identityProviders": [],
   "identityProviderMappers": [],
   "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
         {
            "id": "680f1d55-ba50-4876-85a8-45d3f2a6fc0e",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
               "allowed-protocol-mapper-types": [
                  "oidc-usermodel-property-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-user-property-mapper",
                  "oidc-full-name-mapper",
                  "oidc-address-mapper",
                  "saml-user-attribute-mapper",
                  "saml-role-list-mapper",
                  "oidc-usermodel-attribute-mapper"
               ]
            }
         },
         {
            "id": "3b8af06b-7505-4b87-8c04-ef4fdeb755e9",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
         },
         {
            "id": "eee243d0-f735-4c23-a04e-f254aeb21d07",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
               "host-sending-registration-request-must-match": [
                  "true"
               ],
               "client-uris-must-match": [
                  "true"
               ]
            }
         },
         {
            "id": "e403bea9-8a1f-4e7f-a1d5-78beeff5e8a7",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
               "allowed-protocol-mapper-types": [
                  "oidc-usermodel-property-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-address-mapper",
                  "saml-user-property-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "oidc-full-name-mapper",
                  "saml-role-list-mapper"
               ]
            }
         },
         {
            "id": "c5d6cbd8-57ed-441b-94b8-f5c878f6f662",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
         },
         {
            "id": "654f64bc-cd93-4345-b7b9-4ae98ec20e7c",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
               "allow-default-scopes": [
                  "true"
               ]
            }
         },
         {
            "id": "abae2c9e-ec8a-4d01-b809-f0c08ec3b777",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
               "allow-default-scopes": [
                  "true"
               ]
            }
         },
         {
            "id": "c856cdf0-6a98-4972-9492-b4ac6c850773",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
               "max-clients": [
                  "200"
               ]
            }
         }
      ],
      "org.keycloak.keys.KeyProvider": [
         {
            "id": "9d85edbb-39e5-443b-9370-74acb4449643",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
               "priority": [
                  "100"
               ],
               "algorithm": [
                  "RSA-OAEP"
               ]
            }
         },
         {
            "id": "437004d2-51ab-45d5-9dc1-687ed00d9b65",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
               "priority": [
                  "100"
               ]
            }
         },
         {
            "id": "a99fa8ba-7b0b-4b0d-9b0b-da6551ad3db0",
            "name": "hmac-generated-hs512",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
               "priority": [
                  "100"
               ],
               "algorithm": [
                  "HS512"
               ]
            }
         },
         {
            "id": "600aedcf-0d21-4b04-883c-b28289ecfbd8",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
               "priority": [
                  "100"
               ]
            }
         }
      ]
   },
   "internationalizationEnabled": false,
   "supportedLocales": [],
   "authenticationFlows": [
      {
         "id": "f36fdc01-1858-44ae-bb35-0ade88f5c143",
         "alias": "Account verification options",
         "description": "Method with which to verity the existing account",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "idp-email-verification",
               "authenticatorFlow": false,
               "requirement": "ALTERNATIVE",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "ALTERNATIVE",
               "priority": 20,
               "autheticatorFlow": true,
               "flowAlias": "Verify Existing Account by Re-authentication",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "75457426-70e5-4dc7-924a-e33a1e0aa1dd",
         "alias": "Browser - Conditional OTP",
         "description": "Flow to determine if the OTP is required for the authentication",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "conditional-user-configured",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "auth-otp-form",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "98e61d4d-4a04-4bc4-aacc-e0dc9c8b0bb9",
         "alias": "Direct Grant - Conditional OTP",
         "description": "Flow to determine if the OTP is required for the authentication",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "conditional-user-configured",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "direct-grant-validate-otp",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "23f6347a-3279-476e-8d7e-b01186e14800",
         "alias": "First broker login - Conditional OTP",
         "description": "Flow to determine if the OTP is required for the authentication",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "conditional-user-configured",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "auth-otp-form",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "0c808b79-e2c4-4b16-ad8e-f6ac797d91a8",
         "alias": "Handle Existing Account",
         "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "idp-confirm-link",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": true,
               "flowAlias": "Account verification options",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "d887a342-f072-4f05-bb4e-cac040560cad",
         "alias": "Reset - Conditional OTP",
         "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "conditional-user-configured",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "reset-otp",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "6e32e500-c433-4f9d-8166-22a0298a05fc",
         "alias": "User creation or linking",
         "description": "Flow for the existing/non-existing user alternatives",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticatorConfig": "create unique user config",
               "authenticator": "idp-create-user-if-unique",
               "authenticatorFlow": false,
               "requirement": "ALTERNATIVE",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "ALTERNATIVE",
               "priority": 20,
               "autheticatorFlow": true,
               "flowAlias": "Handle Existing Account",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "1837e183-46e7-4079-a62e-f70e6d7f3f15",
         "alias": "Verify Existing Account by Re-authentication",
         "description": "Reauthentication of existing account",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "idp-username-password-form",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "CONDITIONAL",
               "priority": 20,
               "autheticatorFlow": true,
               "flowAlias": "First broker login - Conditional OTP",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "3a2dfa09-42e8-4363-9ca9-c972579761da",
         "alias": "browser",
         "description": "browser based authentication",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "auth-cookie",
               "authenticatorFlow": false,
               "requirement": "ALTERNATIVE",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "auth-spnego",
               "authenticatorFlow": false,
               "requirement": "DISABLED",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "identity-provider-redirector",
               "authenticatorFlow": false,
               "requirement": "ALTERNATIVE",
               "priority": 25,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "ALTERNATIVE",
               "priority": 30,
               "autheticatorFlow": true,
               "flowAlias": "forms",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "61ee7712-0997-4c00-be02-c68cc01f9af1",
         "alias": "clients",
         "description": "Base authentication for clients",
         "providerId": "client-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "client-secret",
               "authenticatorFlow": false,
               "requirement": "ALTERNATIVE",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "client-jwt",
               "authenticatorFlow": false,
               "requirement": "ALTERNATIVE",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "client-secret-jwt",
               "authenticatorFlow": false,
               "requirement": "ALTERNATIVE",
               "priority": 30,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "client-x509",
               "authenticatorFlow": false,
               "requirement": "ALTERNATIVE",
               "priority": 40,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "c975e32f-0747-4170-92c1-1a3abdf265a3",
         "alias": "direct grant",
         "description": "OpenID Connect Resource Owner Grant",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "direct-grant-validate-username",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "direct-grant-validate-password",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "CONDITIONAL",
               "priority": 30,
               "autheticatorFlow": true,
               "flowAlias": "Direct Grant - Conditional OTP",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "2db83d42-0702-4af1-a8d5-6039c6b138f5",
         "alias": "docker auth",
         "description": "Used by Docker clients to authenticate against the IDP",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "docker-http-basic-authenticator",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "1af914de-f853-4b85-a933-8c4c82d03112",
         "alias": "first broker login",
         "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticatorConfig": "review profile config",
               "authenticator": "idp-review-profile",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": true,
               "flowAlias": "User creation or linking",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "ab368c9d-0e18-44ec-be1e-50a4db5ab72b",
         "alias": "forms",
         "description": "Username, password, otp and other auth forms.",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "auth-username-password-form",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "CONDITIONAL",
               "priority": 20,
               "autheticatorFlow": true,
               "flowAlias": "Browser - Conditional OTP",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "97b36466-84b2-43d7-9d92-85602ff77a77",
         "alias": "registration",
         "description": "registration flow",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "registration-page-form",
               "authenticatorFlow": true,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": true,
               "flowAlias": "registration form",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "ebeeef33-70ab-4345-a5e8-5b0748ea2aab",
         "alias": "registration form",
         "description": "registration form",
         "providerId": "form-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "registration-user-creation",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "registration-password-action",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 50,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "registration-recaptcha-action",
               "authenticatorFlow": false,
               "requirement": "DISABLED",
               "priority": 60,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "registration-terms-and-conditions",
               "authenticatorFlow": false,
               "requirement": "DISABLED",
               "priority": 70,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "e20166cc-5fb4-4926-b763-ca282182c3da",
         "alias": "reset credentials",
         "description": "Reset credentials for a user if they forgot their password or something",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "reset-credentials-choose-user",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "reset-credential-email",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 20,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticator": "reset-password",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 30,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            },
            {
               "authenticatorFlow": true,
               "requirement": "CONDITIONAL",
               "priority": 40,
               "autheticatorFlow": true,
               "flowAlias": "Reset - Conditional OTP",
               "userSetupAllowed": false
            }
         ]
      },
      {
         "id": "9505f4a4-46ac-4c83-83ef-56dffc9a4462",
         "alias": "saml ecp",
         "description": "SAML ECP Profile Authentication Flow",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "http-basic-authenticator",
               "authenticatorFlow": false,
               "requirement": "REQUIRED",
               "priority": 10,
               "autheticatorFlow": false,
               "userSetupAllowed": false
            }
         ]
      }
   ],
   "authenticatorConfig": [
      {
         "id": "2af712f0-3fec-4492-b3c3-93b336b68bbe",
         "alias": "create unique user config",
         "config": {
            "require.password.update.after.registration": "false"
         }
      },
      {
         "id": "c6e6c37f-bfec-441c-af96-140380512f1e",
         "alias": "review profile config",
         "config": {
            "update.profile.on.first.login": "missing"
         }
      }
   ],
   "requiredActions": [
      {
         "alias": "CONFIGURE_TOTP",
         "name": "Configure OTP",
         "providerId": "CONFIGURE_TOTP",
         "enabled": true,
         "defaultAction": false,
         "priority": 10,
         "config": {}
      },
      {
         "alias": "TERMS_AND_CONDITIONS",
         "name": "Terms and Conditions",
         "providerId": "TERMS_AND_CONDITIONS",
         "enabled": false,
         "defaultAction": false,
         "priority": 20,
         "config": {}
      },
      {
         "alias": "UPDATE_PASSWORD",
         "name": "Update Password",
         "providerId": "UPDATE_PASSWORD",
         "enabled": true,
         "defaultAction": false,
         "priority": 30,
         "config": {}
      },
      {
         "alias": "UPDATE_PROFILE",
         "name": "Update Profile",
         "providerId": "UPDATE_PROFILE",
         "enabled": true,
         "defaultAction": false,
         "priority": 40,
         "config": {}
      },
      {
         "alias": "VERIFY_EMAIL",
         "name": "Verify Email",
         "providerId": "VERIFY_EMAIL",
         "enabled": true,
         "defaultAction": false,
         "priority": 50,
         "config": {}
      },
      {
         "alias": "delete_account",
         "name": "Delete Account",
         "providerId": "delete_account",
         "enabled": false,
         "defaultAction": false,
         "priority": 60,
         "config": {}
      },
      {
         "alias": "webauthn-register",
         "name": "Webauthn Register",
         "providerId": "webauthn-register",
         "enabled": true,
         "defaultAction": false,
         "priority": 70,
         "config": {}
      },
      {
         "alias": "webauthn-register-passwordless",
         "name": "Webauthn Register Passwordless",
         "providerId": "webauthn-register-passwordless",
         "enabled": true,
         "defaultAction": false,
         "priority": 80,
         "config": {}
      },
      {
         "alias": "VERIFY_PROFILE",
         "name": "Verify Profile",
         "providerId": "VERIFY_PROFILE",
         "enabled": true,
         "defaultAction": false,
         "priority": 90,
         "config": {}
      },
      {
         "alias": "delete_credential",
         "name": "Delete Credential",
         "providerId": "delete_credential",
         "enabled": true,
         "defaultAction": false,
         "priority": 100,
         "config": {}
      },
      {
         "alias": "update_user_locale",
         "name": "Update User Locale",
         "providerId": "update_user_locale",
         "enabled": true,
         "defaultAction": false,
         "priority": 1000,
         "config": {}
      }
   ],
   "browserFlow": "browser",
   "registrationFlow": "registration",
   "directGrantFlow": "direct grant",
   "resetCredentialsFlow": "reset credentials",
   "clientAuthenticationFlow": "clients",
   "dockerAuthenticationFlow": "docker auth",
   "firstBrokerLoginFlow": "first broker login",
   "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "5",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
   },
   "keycloakVersion": "24.0.4",
   "userManagedAccessAllowed": false,
   "clientProfiles": {
      "profiles": []
   },
   "clientPolicies": {
      "policies": []
   },
   "users": [
      {
         "username": "user",
         "enabled": true,
         "emailVerified": true,
         "createdTimestamp": 1723390849,
         "firstName": "user",
         "lastName": "user",
         "email": "user@example.com",
         "notBefore": 0,
         "groups": [],
         "realmRoles": [
            "default-roles-fantome-app"
         ],
         "credentials": [
            {
               "type": "password",
               "value": "password"
            }
         ]
      }
   ]
}
